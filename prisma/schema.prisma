generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin {
  id_admin       Int     @id @default(autoincrement())
  firstname      String  @db.VarChar(100)
  lastname       String  @db.VarChar(100)
  email          String  @unique(map: "email_UNIQUE") @db.VarChar(255)
  hashedPassword String? @db.VarChar(255)
}

model appointments {
  id_appointment Int       @id @default(autoincrement())
  userId         Int
  prosId         Int
  date           DateTime  @db.DateTime(0)
  comment        String    @db.MediumText
  immat          String
  vehicules      vehicules @relation(fields: [immat], references: [immat], map: "Appointment_immat_fkey")
  pros           pros      @relation(fields: [prosId], references: [id_pros], map: "Appointment_prosId_fkey")
  users          users     @relation(fields: [userId], references: [id_user], map: "Appointment_userId_fkey")

  @@index([prosId], map: "Appointment_prosId_fkey")
  @@index([userId], map: "Appointment_userId_fkey")
  @@index([immat], map: "Appointments_immat_fkey")
}

model brands {
  id_brand Int      @id @default(autoincrement())
  code     String?  @db.VarChar(45)
  name     String   @db.VarChar(100)
  models   models[]
}

model models {
  id_model  Int         @id @default(autoincrement())
  code      String?     @db.VarChar(45)
  name      String?     @db.VarChar(100)
  id_brand  Int
  brand     brands      @relation(fields: [id_brand], references: [id_brand], map: "Models_id_brand_fkey")
  vehicules vehicules[]

  @@index([id_brand], map: "Models_id_brand_fkey")
}

model pros {
  id_pros        Int             @id @default(autoincrement())
  name           String          @db.VarChar(255)
  email          String          @unique(map: "email_UNIQUE") @db.VarChar(255)
  hashedPassword String          @db.VarChar(255)
  address        String          @db.Text
  postal_code    Int
  city           String          @db.VarChar(150)
  siret          String          @db.VarChar(14)
  phone          String          @db.VarChar(15)
  appointments   appointments[]
  service_books  service_books[]
  users          users[]         @relation("prostousers")
}

model service_books {
  id_service_book Int       @id @default(autoincrement())
  date            DateTime  @db.Date
  service         String    @db.Text
  observations    String?   @db.Text
  kilometrage     Int
  url_invoice     String?   @db.MediumText
  id_pros         Int
  immat           String
  pros            pros      @relation(fields: [id_pros], references: [id_pros], map: "Service_Book_id_pros_fkey")
  vehicules       vehicules @relation(fields: [immat], references: [immat], map: "Service_Book_immat_fkey")

  @@index([id_pros], map: "Service_Book_id_pros_fkey")
  @@index([immat], map: "Service_Book_immat_fkey")
}

model types {
  id_type   Int         @id @default(autoincrement())
  name_type String      @unique(map: "name_type_UNIQUE") @db.VarChar(100)
  vehicules vehicules[]
}

model users {
  id_user        Int            @id @default(autoincrement())
  firstname      String         @db.VarChar(100)
  lastname       String         @db.VarChar(100)
  email          String         @unique(map: "email_UNIQUE") @db.VarChar(255)
  hashedPassword String?        @db.VarChar(255)
  address        String         @db.Text
  phone          String         @db.VarChar(15)
  postal_code    Int
  city           String         @db.VarChar(150)
  active         Boolean        @default(true)
  appointments   appointments[]
  vehicules      vehicules[]
  pros           pros[]         @relation("prostousers")
}

model vehicules {
  immat                    String          @id @db.VarChar(15)
  registration_date        DateTime        @db.Date
  url_vehiculeRegistration String          @db.MediumText
  id_modelId               Int
  id_typeId                Int
  id_userId                Int
  active                   Boolean         @default(true)
  validate                 Boolean         @default(false)
  models                   models          @relation(fields: [id_modelId], references: [id_model], map: "Vehicules_id_modelId_fkey")
  types                    types           @relation(fields: [id_typeId], references: [id_type], map: "Vehicules_id_typeId_fkey")
  users                    users           @relation(fields: [id_userId], references: [id_user], map: "Vehicules_id_userId_fkey")
  appointments             appointments[]
  service_books            service_books[]

  @@index([id_modelId], map: "Vehicules_id_modelId_fkey")
  @@index([id_typeId], map: "Vehicules_id_typeId_fkey")
  @@index([id_userId], map: "Vehicules_id_userId_fkey")
}
